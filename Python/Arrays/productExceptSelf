class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        

        """
        for brute force O(n^2)
        for i 0 to n and j 0 to n i != j mul

        O(N) soluntion would be have two arrays prefix and suffix and res array would sum of both  space O(N)

        """
        prefix = [1] * len(nums)
        suffix = [1] * len(nums)
        n = len(nums)
        res = [0] * len(nums)

        for i in range(1,n):
            prefix[i] = prefix[i-1]*nums[i-1]
        
        for i in range(n-2, -1,-1):
            suffix[i] = suffix[i+1] * nums[i+1]

        for i in range(0,n):
            res[i] = prefix[i] * suffix[i]
        
        return res
        
