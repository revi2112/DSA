Class Solution {
    public int longestPalindrome(String s) {
        /*
        in palindrome an alphabet should come even time
        it may have at max one odd char (in middle)

        max length approch
        all set of even chars 
        and any one middle center (if atlast on char is odd we can add one in teh end)
        */
        int res = 0;
        boolean flag = false;
        int value = 0;
        HashMap<Character, Integer> hmap = new HashMap();

        for(char c : s.toCharArray()){
            hmap.put(c, hmap.getOrDefault(c,0)+1);
        }

        for(char c: hmap.keySet()){
            value = hmap.get(c);
            if(value%2 ==0) res+= value;
            else{
                res += value - 1;
                flag = true;
            }
        }
        if(flag) return res+1;
        return res;

    }
}